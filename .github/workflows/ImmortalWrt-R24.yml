name: 🚀 编译 ImmortalWrt-R24

on:
  workflow_dispatch:
    inputs:
      multithreading:
        description: '开启多线程编译 (Enable multithreading build)'
        type: boolean
        default: true
      ssh:
        description: '使用 ssh 连接到编译环境 (Connect to the build environment using ssh)'
        type: boolean
        default: false

jobs:
  build:
    if: ${{inputs.ssh == false}}
    runs-on: ubuntu-latest
    name: 🚀 编译 (Build)
    steps:
      - name: 安装编译依赖 (Install dependencies)
        run: |
          sudo apt update -y
          sudo apt full-upgrade -y
          sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
            bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
            g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
            libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libpython3-dev \
            libreadline-dev libssl-dev libtool libyaml-dev libz-dev lld llvm lrzsz mkisofs msmtp nano \
            ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip python3-ply python3-docutils \
            python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs \
            upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd

      - name: 克隆当前仓库 (Clone current repo)
        uses: actions/checkout@v4

      - name: 克隆 ImmortalWrt 仓库 (Clone ImmortalWrt repo)
        uses: actions/checkout@v4
        with:
          repository: 'immortalwrt/immortalwrt'
          ref: openwrt-24.10
          path: ImmortalWrt

      - name: 拉取 luci-app-lucky 并修改配置 (Add luci-app-lucky & modify config)
        working-directory: ImmortalWrt
        run: |
          git clone https://github.com/gdy666/luci-app-lucky.git package/lucky
          sed -i 's/192.168.1.1/10.159.1.66/g' package/base-files/files/bin/config_generate
          sed -i 's/ImmortalWrt/LuckyWRT/g' package/base-files/files/bin/config_generate

      - name: 更新并下载 feeds (Update and install feeds)
        working-directory: ImmortalWrt
        run: ./scripts/feeds update -a && ./scripts/feeds install -a

      - name: 清理之前的构建 (Clean previous builds)
        working-directory: ImmortalWrt
        run: make clean
        
      - name: 上传配置备份 (Upload config before build)
        uses: actions/upload-artifact@v4
        with:
          name: config-before-build
          path: ImmortalWrt/.config

      - name: 多线程编译 (Multithreaded build)
        if: ${{inputs.multithreading == true}}
        working-directory: ImmortalWrt
        run: make -j$(nproc) V=s

      - name: 单线程编译 (Single thread build)
        if: ${{inputs.multithreading == false}}
        working-directory: ImmortalWrt
        run: make -j1 V=s

      - name: 上传编译产物 (Upload build artifacts)
        uses: actions/upload-artifact@v4
        with:
          name: ImmortalWrt-build-result
          path: ImmortalWrt/bin/targets

  build-ssh:
    if: ${{inputs.ssh == true}}
    name: 🚀 编译 (Build) - SSH
    runs-on: ubuntu-latest
    steps:
      - name: 安装编译依赖 (Install dependencies)
        run: |
          sudo apt update -y
          sudo apt full-upgrade -y
          sudo apt install -y ack antlr3 asciidoc autoconf automake autopoint binutils bison build-essential \
            bzip2 ccache clang cmake cpio curl device-tree-compiler ecj fastjar flex gawk gettext gcc-multilib \
            g++-multilib git gnutls-dev gperf haveged help2man intltool lib32gcc-s1 libc6-dev-i386 libelf-dev \
            libglib2.0-dev libgmp3-dev libltdl-dev libmpc-dev libmpfr-dev libncurses-dev libpython3-dev \
            libreadline-dev libssl-dev libtool libyaml-dev libz-dev lld llvm lrzsz mkisofs msmtp nano \
            ninja-build p7zip p7zip-full patch pkgconf python3 python3-pip python3-ply python3-docutils \
            python3-pyelftools qemu-utils re2c rsync scons squashfs-tools subversion swig texinfo uglifyjs \
            upx-ucl unzip vim wget xmlto xxd zlib1g-dev zstd

      - name: 克隆当前仓库 (Clone current repo)
        uses: actions/checkout@v4

      - name: 克隆 ImmortalWrt 仓库 (Clone ImmortalWrt repo)
        uses: actions/checkout@v4
        with:
          repository: 'immortalwrt/immortalwrt'
          ref: openwrt-24.10
          path: ImmortalWrt

      - name: 拉取 luci-app-lucky 并修改配置 (Add luci-app-lucky & modify config)
        working-directory: ImmortalWrt
        run: |
          git clone https://github.com/gdy666/luci-app-lucky.git package/lucky
          sed -i 's/192.168.1.1/10.159.1.66/g' package/base-files/files/bin/config_generate
          sed -i 's/ImmortalWrt/LuckyWRT/g' package/base-files/files/bin/config_generate

      - name: 更新并下载 feeds (Update and install feeds)
        working-directory: ImmortalWrt
        run: ./scripts/feeds update -a && ./scripts/feeds install -a

      - name: 开启 SSH 服务 (Start SSH session)
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true

      - name: 上传配置备份 (Upload config before build)
        uses: actions/upload-artifact@v4
        with:
          name: config-before-build
          path: ImmortalWrt/.config

      - name: 多线程编译 (Multithreaded build)
        if: ${{inputs.multithreading == true}}
        working-directory: ImmortalWrt
        run: make -j$(nproc) V=s

      - name: 单线程编译 (Single thread build)
        if: ${{inputs.multithreading == false}}
        working-directory: ImmortalWrt
        run: make -j1 V=s

      - name: 上传编译产物 (Upload build artifacts)
        uses: actions/upload-artifact@v4
        with:
          name: ImmortalWrt-build-result
          path: ImmortalWrt/bin/targets

